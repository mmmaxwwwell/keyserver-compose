version: '3'
services:
  keyserver:
    image: mmmaxwwwell/keyserver
    # build:
    #   context: ./keyserver/
    #   dockerfile: ./Dockerfile
    container_name: keyserver
    restart: always
    env_file:
      - ./settings/keyserver.env
      - ./settings/common.env
    networks:
      - keyserver-db
      - keyserver
    depends_on:
      - mongo
      - nginx
  mongo:
    image: mongo:bionic
    container_name: mongo
    restart: always
    volumes:
      - ./appdata/mongo/data/db:/data/db
      - ./appdata/mongo/data/log:/data/log
      - ./settings/mongod.conf:/etc/mongod.conf
    networks:
      - keyserver-db
    command: mongod --config /etc/mongod.conf
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: always
    volumes:
     - webroot:/usr/share/nginx/html/
     - certbot-etc:/etc/letsencrypt
     - certbot-var:/var/lib/letsencrypt
     - ./appdata/nginx/dhparam.pem:/etc/ssl/certs/dhparam.pem
     - ./settings/nginx.conf.template:/etc/nginx/conf.d/mysite.template
    ports: 
      - "80:80"
      - "443:443"
    networks:
      - keyserver
    env_file:
      - ./settings/common.env
    command: /bin/bash -c "envsubst '$${HOSTED_URL}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
    - certbot-etc:/etc/letsencrypt
    - certbot-var:/var/lib/letsencrypt
    - web-root:/var/www/html
    depends_on:
    - nginx
    command: certonly --staging --rsa-key-size 4096 --webroot --noninteractive --webroot-path=/var/www/html --email ${ADMIN_EMAIL} --agree-tos --no-eff-email -d ${HOSTED_URL} -d ${KEYSERVER_SUBDOMAIN}${HOSTED_URL} -d www.${HOSTED_URL} --expand
volumes:
  certbot-etc:
  certbot-var:
  webroot:
networks:
  keyserver-db:
  keyserver: