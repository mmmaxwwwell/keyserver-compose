worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
user nginx;

events {
  worker_connections  1024;
}

http {
  server_tokens off;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options DENY;
  add_header Strict-Transport-Security "max-age=31536000;" always;

  server {
    listen 80;
    #root /var/www/html;
    server_name ${HOSTED_URL} www.${HOSTED_URL} keys.${HOSTED_URL};

    location ~ /\.(?!well-known) {
      #deny all;
      root /var/www/html;
    }

    location ~ /\.well-known/acme-challenge {
      allow all;
      root /usr/share/nginx/html;
    }

    location = /favicon.ico {
      log_not_found off;
      access_log    off;
    }

    location = /robots.txt {
      log_not_found off;
      access_log    off;
    }

    location / {
      return 302 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    server_name _;
    ssl_certificate      /etc/letsencrypt/live/${HOSTED_URL}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/${HOSTED_URL}/privkey.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    ssl_prefer_server_ciphers on;
    ssl_ciphers CDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384;#:ECDHE-RSA-AES256-SHA384;
    ssl_protocols TLSv1.2 TLSv1.3;

    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    ssl_ecdh_curve secp384r1;

    gzip off;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/${HOSTED_URL}/fullchain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=600s;
    resolver_timeout 5s;

    location ~ /\.(?!well-known) {
      deny all;
    }

    location = /favicon.ico {
      log_not_found off;
      access_log    off;
    }

    location = /robots.txt {
      log_not_found off;
      access_log    off;
    }
  }

  server {
    listen 443 ssl;
    server_name keys.${HOSTED_URL};
    location / {
      proxy_pass http://keyserver:80;
    }
  }

}
